{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "AdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "changeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.",
			"events": {
				"AdminChanged(address,address)": {
					"details": "Emitted when the administration has been transferred.",
					"params": {
						"newAdmin": "Address of the new admin.",
						"previousAdmin": "Address of the previous admin."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"admin()": {
					"returns": {
						"_0": "The address of the proxy admin."
					}
				},
				"changeAdmin(address)": {
					"details": "Changes the admin of the proxy. Only the current admin can call this function.",
					"params": {
						"newAdmin": "Address to transfer proxy administration to."
					}
				},
				"implementation()": {
					"returns": {
						"_0": "The address of the implementation."
					}
				},
				"upgradeTo(address)": {
					"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
					"params": {
						"newImplementation": "Address of the new implementation."
					}
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
					"params": {
						"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
						"newImplementation": "Address of the new implementation."
					}
				}
			},
			"stateVariables": {
				"ADMIN_SLOT": {
					"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
				}
			},
			"title": "BaseAdminUpgradeabilityProxy",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/dependencies/upgradability/BaseAdminUpgradeabilityProxy.sol": "BaseAdminUpgradeabilityProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/dependencies/openzeppelin/utils/Address.sol": {
			"keccak256": "0x799dadcc9be20dc638f07336056f790f144b3f647b9f3c89c52af37c1be4794d",
			"license": "MIT",
			"urls": [
				"bzz-raw://c040ca0e11f4e9441f2307e3e70fac72b96c2394533c07eda42c40db26746e97",
				"dweb:/ipfs/QmYGoQR56HmoBEpJo5bW7gWUXiejbxvBpeCt8dYsP79XWb"
			]
		},
		"localhost/contracts/dependencies/upgradability/BaseAdminUpgradeabilityProxy.sol": {
			"keccak256": "0xe104f39ad1a115c9a8d60a01634311ceafa9101ce6112be18a62b5e2c7f2b408",
			"license": "MIT",
			"urls": [
				"bzz-raw://07e287f524c1092f29f6e0a3e115f5fb200fea4f2a3b11bdd69bc442b9f1f313",
				"dweb:/ipfs/QmQGZKnnE8WSdEXzLtDywRU9BP8Q2WPuLEnXsrXu9GfL6F"
			]
		},
		"localhost/contracts/dependencies/upgradability/BaseUpgradeabilityProxy.sol": {
			"keccak256": "0x7a060aaa3a2ec27809c2fe3be2ef9f62cb7048e8e6ddebf3b4936cdaac746602",
			"license": "MIT",
			"urls": [
				"bzz-raw://8927cf748d2825b1c6e38d3efcc809d7705a34c7728b8c48369e1a6c70236b62",
				"dweb:/ipfs/QmQ1JhS2mv4T3oi2w1zm6Br9Pd2hZHbsRy3SV4atQMDNLJ"
			]
		},
		"localhost/contracts/dependencies/upgradability/Proxy.sol": {
			"keccak256": "0xef34510c466e359b7bb14a70760e25b819be03a4dd10c6267c7e5171c1ad9b86",
			"license": "MIT",
			"urls": [
				"bzz-raw://a401181a140b32def891a79f75bfbadefbe7c14a84d0d5f240ac4a935ca0e6cb",
				"dweb:/ipfs/QmWQU8oeY5SHMYot1fs7g29FwrRqx7o5oQn8NqCjZZWZJR"
			]
		},
		"localhost/contracts/dependencies/upgradability/UpgradeabilityProxy.sol": {
			"keccak256": "0x26e681c23e1d71251739becfc52feeed3146f2738dd2912cf5c45683b6da8b97",
			"license": "MIT",
			"urls": [
				"bzz-raw://1afa681322b876bf2ac360fb5585951934b70347bb4a2d96aac9c33262fa9866",
				"dweb:/ipfs/QmWadxHx5cTB9QaJDYLWpeXpaDpriiwqjzaoGWoHiJQB31"
			]
		}
	},
	"version": 1
}