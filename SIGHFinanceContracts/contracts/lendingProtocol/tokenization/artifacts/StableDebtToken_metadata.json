{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "underlyingAsset",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "BorrowAllowanceDelegated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balanceIncrease",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "avgStableRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotalSupply",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentBalance",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balanceIncrease",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "avgStableRate",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newTotalSupply",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEBT_TOKEN_REVISION",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "POOL",
				"outputs": [
					{
						"internalType": "contract ILendingPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "UNDERLYING_ASSET_ADDRESS",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "_averageBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "delegatee",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approveDelegation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "averageBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromUser",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "toUser",
						"type": "address"
					}
				],
				"name": "borrowAllowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "burn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimMySIGH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "users",
						"type": "address[]"
					}
				],
				"name": "claimSIGH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAverageStableRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAverageTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getPlatformFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getReserveFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getSighAccured",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSupplyData",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalSupplyAndAvgRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalSupplyLastUpdated",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserLastUpdated",
				"outputs": [
					{
						"internalType": "uint40",
						"name": "",
						"type": "uint40"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserStableRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "decimals",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "onBehalfOf",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rate",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "principalBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_SIGHHarvesterAddress",
						"type": "address"
					}
				],
				"name": "setSIGHHarvesterAddress",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "sighHarvester",
				"outputs": [
					{
						"internalType": "contract ISIGHHarvester",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "platformFeeIncrease",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "platformFeeDecrease",
						"type": "uint256"
					}
				],
				"name": "updatePlatformFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "reserveFeeIncrease",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reserveFeeDecrease",
						"type": "uint256"
					}
				],
				"name": "updateReserveFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave*",
			"kind": "dev",
			"methods": {
				"_averageBalanceOf(address)": {
					"returns": {
						"_0": "The average balance of the token*"
					}
				},
				"allowance(address,address)": {
					"details": "Returns the allowance of spender on the tokens owned by owner",
					"params": {
						"owner": "The owner of the tokens",
						"spender": "The user allowed to spend the owner's tokens"
					},
					"returns": {
						"_0": "The amount of owner's tokens spender is allowed to spend*"
					}
				},
				"approve(address,uint256)": {
					"details": "Allows `spender` to spend the tokens owned by _msgSender()",
					"params": {
						"spender": "The user allowed to spend _msgSender() tokens"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"approveDelegation(address,uint256)": {
					"details": "delegates borrowing power to a user on the specific debt token",
					"params": {
						"amount": "the maximum amount being delegated. Delegation will still respect the liquidation constraints (even if delegated, a delegatee cannot force a delegator HF to go below 1)*",
						"delegatee": "the address receiving the delegated borrowing power"
					}
				},
				"balanceOf(address)": {
					"details": "Calculates the current user debt balance",
					"returns": {
						"_0": "The accumulated debt of the user*"
					}
				},
				"borrowAllowance(address,address)": {
					"details": "returns the borrow allowance of the user",
					"params": {
						"fromUser": "The user to giving allowance",
						"toUser": "The user to give allowance to"
					},
					"returns": {
						"_0": "the current allowance of toUser*"
					}
				},
				"burn(address,uint256)": {
					"details": "Burns debt of `user`",
					"params": {
						"amount": "The amount of debt tokens getting burned*",
						"user": "The address of the user getting his debt burned"
					}
				},
				"decimals()": {
					"returns": {
						"_0": "The decimals of the token*"
					}
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Decreases the allowance of spender to spend _msgSender() tokens",
					"params": {
						"spender": "The user allowed to spend on behalf of _msgSender()",
						"subtractedValue": "The amount being subtracted to the allowance"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"getAverageStableRate()": {
					"details": "Returns the average stable rate across all the stable rate debt",
					"returns": {
						"_0": "the average stable rate*"
					}
				},
				"getAverageTotalSupply()": {
					"returns": {
						"_0": "The averaged total supply of the token, requried by the SIGH Volatility harvester*"
					}
				},
				"getSupplyData()": {
					"details": "Returns the principal and total supply, the average borrow rate and the last supply update timestamp*"
				},
				"getTotalSupplyAndAvgRate()": {
					"details": "Returns the the total supply and the average stable rate*"
				},
				"getTotalSupplyLastUpdated()": {
					"details": "Returns the timestamp at which the total supply was updated*"
				},
				"getUserLastUpdated(address)": {
					"details": "Returns the timestamp of the last user action",
					"returns": {
						"_0": "The last update timestamp*"
					}
				},
				"getUserStableRate(address)": {
					"details": "Returns the stable rate of the user",
					"params": {
						"user": "The address of the user"
					},
					"returns": {
						"_0": "The stable rate of user*"
					}
				},
				"increaseAllowance(address,uint256)": {
					"details": "Increases the allowance of spender to spend _msgSender() tokens",
					"params": {
						"addedValue": "The amount being added to the allowance",
						"spender": "The user allowed to spend on behalf of _msgSender()"
					},
					"returns": {
						"_0": "`true`*"
					}
				},
				"initialize(uint8,string,string)": {
					"details": "Initializes the debt token.",
					"params": {
						"decimals": "The decimals of the token",
						"name": "The name of the token",
						"symbol": "The symbol of the token"
					}
				},
				"mint(address,address,uint256,uint256)": {
					"details": "Mints debt token to the `onBehalfOf` address. -  Only callable by the LendingPool - The resulting rate is the weighted average between the rate of the new debt and the rate of the previous debt",
					"params": {
						"amount": "The amount of debt tokens to mint",
						"onBehalfOf": "The address receiving the debt tokens",
						"rate": "The rate of the debt being minted*",
						"user": "The address receiving the borrowed underlying, being the delegatee in case of credit delegate, or same as `onBehalfOf` otherwise"
					}
				},
				"name()": {
					"returns": {
						"_0": "The name of the token*"
					}
				},
				"principalBalanceOf(address)": {
					"details": "Returns the principal debt balance of the user from",
					"params": {
						"user": "The user's address"
					},
					"returns": {
						"_0": "The debt balance of the user since the last burn/mint action*"
					}
				},
				"setSIGHHarvesterAddress(address)": {
					"details": "Sets the SIGH Harvester Proxy Contract Address",
					"params": {
						"_SIGHHarvesterAddress": "The SIGH Harvester Proxy Contract Address"
					},
					"returns": {
						"_0": "The amount transferred*"
					}
				},
				"symbol()": {
					"returns": {
						"_0": "The symbol of the token*"
					}
				},
				"totalSupply()": {
					"details": "Returns the total supply*"
				},
				"transfer(address,uint256)": {
					"details": "Being non transferrable, the debt token does not implement any of the standard ERC20 functions for transfer and allowance.*"
				},
				"transferFrom(address,address,uint256)": {
					"details": "Executes a transfer of token from sender to recipient, if _msgSender() is allowed to do so",
					"params": {
						"amount": "The amount of tokens being transferred",
						"recipient": "The recipient of the tokens",
						"sender": "The owner of the tokens"
					},
					"returns": {
						"_0": "`true` if the transfer succeeds, `false` otherwise*"
					}
				}
			},
			"title": "StableDebtToken",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Implements a stable debt token to track the borrowing positions of users at stable rate mode",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/lendingProtocol/tokenization/StableDebtToken.sol": "StableDebtToken"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/dependencies/openzeppelin/GSN/Context.sol": {
			"keccak256": "0x910a2e625b71168563edf9eeef55a50d6d699acfe27ceba3921f291829a8f938",
			"license": "MIT",
			"urls": [
				"bzz-raw://248246ac66e6479dce1ad7d4945ec5540c98ceb09881e93c93f7c48d5772925c",
				"dweb:/ipfs/QmXr8tmUiZgEYid6ixeeBRmTdUnASWjKzhP3KRxMPy8fRt"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/math/SafeMath.sol": {
			"keccak256": "0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f",
				"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/token/ERC20/IERC20.sol": {
			"keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
				"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/token/ERC20/IERC20Detailed.sol": {
			"keccak256": "0x236309ced96407394e23b83516269b6e85c33eeb2a612a1ce2a28b360be56137",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d2cffdab41e503c7937d9bfe2ce0e69b8333dfb849d2ac36333e5322da4e466c",
				"dweb:/ipfs/QmbpDyDVfUpV7i2QjsUr8wQD7oQGjzyT2yQBoJsSqxXg23"
			]
		},
		"localhost/contracts/dependencies/upgradability/VersionedInitializable.sol": {
			"keccak256": "0x4a35b2722384972abf8ca6f83a2e421262a88b2ddd56f92a2d4cc06f9c492743",
			"license": "MIT",
			"urls": [
				"bzz-raw://5508cf15f58a8daaabd2d36b3808f89fde29b644aad0a3f642e396a7ec10e5b1",
				"dweb:/ipfs/QmX7wV9twUVAmToFtfbizsXNiCydAxgEaRcgFuuSwdG47w"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/math/MathUtils.sol": {
			"keccak256": "0x04b6ce24410ae1a16622d64d402911388117c0f1d3e29880545811bfdb4522a2",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://b69134b1e206a6afd8aac2de046836cdc79ce5df31d019abb95f683790c5cc86",
				"dweb:/ipfs/QmWroEDZJbeBehKfJmwjMUUv2JZ8ju2zPHAXpJH48k5Pqe"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/math/WadRayMath.sol": {
			"keccak256": "0x504b929ff88e2fb5b300561d6e7a028c0761213537c6fc78fbcff1eca4e0f7ed",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://fabb2f931112a03593460ae730308803b8c3ced8c174a0a4791fb5c8b5e2fbe9",
				"dweb:/ipfs/QmXApJYKEdDu7CFcfKpn2Ap9wAraxu62ZvfnDfDm3ejfHN"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/types/DataTypes.sol": {
			"keccak256": "0x49156a840c4dcecea3da7e5949445ba724f374a54df7d2f60e33391f50b99581",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://37b3f5d93949cece243196e40eb06734ccea9e4d3fe4e95bb883d1c4077ba614",
				"dweb:/ipfs/QmQSkAcgL3iPCdumSRRbq2qmhNQfiTwG9MiexSTcX7PaR2"
			]
		},
		"localhost/contracts/lendingProtocol/tokenization/IncentivizedERC20.sol": {
			"keccak256": "0x6ea08e59aa5fa782ee0f9f9fad82c66607324eafd79e947e5a9b95439fc0c83a",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://ac3f2f4b916cfbe8fe90d1f725193bb47e43f6eae0bfad2f8ff3fb1ff9bef95a",
				"dweb:/ipfs/QmTBAxSidTuS9XyMHH38c8Awt6ysW6sm6oqoaVWVKSuTRP"
			]
		},
		"localhost/contracts/lendingProtocol/tokenization/StableDebtToken.sol": {
			"keccak256": "0x708eafc7f09ea01161f3eebceeae4ea026f47f2e44d226f12e5f1245e2dce202",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://cbc07b237c485c0958a5e37986be6085fd62effb210d3114097993c6e82530de",
				"dweb:/ipfs/QmQxto15DaFwjEAj9wvwwc9mqt2Wt4h7ZzMg8j5HCnRpY7"
			]
		},
		"localhost/contracts/lendingProtocol/tokenization/base/DebtTokenBase.sol": {
			"keccak256": "0x8bdd3b8096a9e88b52199ad152b5a700545cddf446330c91bda32b7612b005af",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://1c8a9b7ff659a5b21b7452b400acae28704189668191c0831ec15f16247a6f72",
				"dweb:/ipfs/QmYtpwShh5X5YWZsYiW7pDqPiimYChk7nfM1ee89772A5n"
			]
		},
		"localhost/interfaces/GlobalAddressesProvider/IGlobalAddressesProvider.sol": {
			"keccak256": "0x21ac1e2d66fadbf678e845f012ce25df0a88f7bcebfc1f28e1dc4a1acf81f718",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://508f54f396633ee44b37c8da0110dcdbdc1b2580a88726db9d41373165a71eb4",
				"dweb:/ipfs/QmNxrYwiDRQfw3rfiifhyB1tcNPWTd3NNaNUvthBmiAMoT"
			]
		},
		"localhost/interfaces/lendingProtocol/ICreditDelegationToken.sol": {
			"keccak256": "0xd9cdfb0d3815fb98e2cacc28a58e964d259b71dadd122ce3b44162eec74eee9a",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://d9e5bbe96a71838662021ffeaf848d6e673fa5c37397232464b41c249f93dcaa",
				"dweb:/ipfs/QmcCXXgbRg8vuZZbZoGxjmfT7WjMR3FpL45FP4ErmXDtRu"
			]
		},
		"localhost/interfaces/lendingProtocol/ILendingPool.sol": {
			"keccak256": "0x6138383c7d28a7589419a63a2503044063dba9bf9312119fd6dd958c8e9e79f6",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://57c364cc637c6883b38e3c2318d0e8b670ce701d996fe6c5c8c9582ac362f7fe",
				"dweb:/ipfs/QmNk9Xc82oM2EaevT6vnFKN2fhiLUNayjymuX9bJbmaYL2"
			]
		},
		"localhost/interfaces/lendingProtocol/ISIGHHarvestDebtToken.sol": {
			"keccak256": "0xf2d1d2529d3e24452388f9a59c82a0ac48a79784caeff1aee7289b237377fb32",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://aad676f3d0e673c1762f859f2e64c935dd6d92d496850ecac8527d06da71df62",
				"dweb:/ipfs/QmZP4GUMu7uerCu9369MoCCAbauCvK3M6CtfqzMZazHMyh"
			]
		},
		"localhost/interfaces/lendingProtocol/ISIGHHarvester.sol": {
			"keccak256": "0x4ba75f671dd725ea5eda8eddb12262d487116d2a93bfcd8bf6283877e9ff7326",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://40aa434bda0532b0e7863881cee839b0f9381b7e381b3552f302ec61160dd4f3",
				"dweb:/ipfs/QmaVmVwFy1APi9Jhfb38YbMiMjoWKF6cstGwAzMdatbryE"
			]
		},
		"localhost/interfaces/lendingProtocol/IStableDebtToken.sol": {
			"keccak256": "0xb24827e55cd852a308849c2c06719872919afe94f4b646106cd0a3086e3c21ed",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://b5b0e333546f41d3604b5a315f6209597b70b720e7110e36041f48cf8dee7dda",
				"dweb:/ipfs/QmWnxzzb9oABEZkAeMgEuRG8nEXMA7RcgJYdhyXLjMQziw"
			]
		}
	},
	"version": 1
}