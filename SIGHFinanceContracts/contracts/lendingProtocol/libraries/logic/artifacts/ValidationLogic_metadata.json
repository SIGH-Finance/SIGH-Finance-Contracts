{
	"compiler": {
		"version": "0.7.0+commit.9e61f92b"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "REBALANCE_UP_LIQUIDITY_RATE_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "REBALANCE_UP_USAGE_RATIO_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Aave",
			"kind": "dev",
			"methods": {
				"validateBorrow(address,DataTypes.InstrumentData storage,address,uint256,uint256,uint256,uint256,mapping(address => DataTypes.InstrumentData) storage,DataTypes.UserConfigurationMap storage,mapping(uint256 => address) storage,uint256,address)": {
					"details": "Validates a borrow action",
					"params": {
						"amount": "The amount to be borrowed",
						"amountInETH": "The amount to be borrowed, in ETH",
						"asset": "The address of the asset to borrow",
						"instrument": "The instrument state from which the user is borrowing",
						"instruments": "The addresses of all the active instruments",
						"instrumentsData": "The state of all the instruments",
						"interestRateMode": "The interest rate mode at which the user is borrowing",
						"maxStableLoanPercent": "The max amount of the liquidity that can be borrowed at stable rate, in percentage",
						"oracle": "The price oracle",
						"userAddress": "The address of the user",
						"userConfig": "The state of the user for the specific instrument"
					}
				},
				"validateDeposit(DataTypes.InstrumentData storage,uint256)": {
					"details": "Validates a deposit action",
					"params": {
						"amount": "The amount to be deposited",
						"instrument": "The instrument object on which the user is depositing"
					}
				},
				"validateRebalanceStableBorrowRate(DataTypes.InstrumentData storage,address,IERC20,IERC20,address)": {
					"details": "Validates a stable borrow rate rebalance action",
					"params": {
						"iTokenAddress": "The address of the aToken contract",
						"instrument": "The instrument state on which the user is getting rebalanced",
						"instrumentAddress": "The address of the instrument",
						"stableDebtToken": "The stable debt token instance",
						"variableDebtToken": "The variable debt token instance"
					}
				},
				"validateRepay(DataTypes.InstrumentData storage,uint256,DataTypes.InterestRateMode,address,uint256,uint256)": {
					"details": "Validates a repay action",
					"params": {
						"amountSent": "The amount sent for the repayment. Can be an actual value or uint(-1)",
						"instrument": "The instrument state from which the user is repaying",
						"onBehalfOf": "The address of the user msg.sender is repaying for",
						"stableDebt": "The borrow balance of the user",
						"variableDebt": "The borrow balance of the user"
					}
				},
				"validateSetUseInstrumentAsCollateral(DataTypes.InstrumentData storage,address,bool,mapping(address => DataTypes.InstrumentData) storage,DataTypes.UserConfigurationMap storage,mapping(uint256 => address) storage,uint256,address)": {
					"details": "Validates the action of setting an asset as collateral",
					"params": {
						"instrument": "The state of the instrument that the user is enabling or disabling as collateral",
						"instrumentAddress": "The address of the instrument",
						"instruments": "The addresses of all the active instruments",
						"instrumentsData": "The data of all the instruments",
						"oracle": "The price oracle",
						"userConfig": "The state of the user for the specific instrument"
					}
				},
				"validateSwapRateMode(DataTypes.InstrumentData storage,DataTypes.UserConfigurationMap storage,uint256,uint256,DataTypes.InterestRateMode)": {
					"details": "Validates a swap of borrow rate mode.",
					"params": {
						"currentRateMode": "The rate mode of the borrow",
						"instrument": "The instrument state on which the user is swapping the rate",
						"stableDebt": "The stable debt of the user",
						"userConfig": "The user instruments configuration",
						"variableDebt": "The variable debt of the user"
					}
				},
				"validateWithdraw(address,uint256,uint256,mapping(address => DataTypes.InstrumentData) storage,DataTypes.UserConfigurationMap storage,mapping(uint256 => address) storage,uint256,address)": {
					"details": "Validates a withdraw action",
					"params": {
						"amount": "The amount to be withdrawn",
						"instrumentAddress": "The address of the instrument",
						"instruments": "The addresses of the instruments",
						"instrumentsCount": "The number of instruments",
						"instrumentsData": "The instruments state",
						"oracle": "The price oracle",
						"userBalance": "The balance of the user",
						"userConfig": "The user configuration"
					}
				}
			},
			"title": "ValidationLogic library",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Implements functions to validate the different actions of the protocol",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/lendingProtocol/libraries/logic/ValidationLogic.sol": "ValidationLogic"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/dependencies/openzeppelin/math/SafeMath.sol": {
			"keccak256": "0xba96bc371ba999f452985a98717cca1e4c4abb598dc038a9a9c3db08129b1ba4",
			"license": "MIT",
			"urls": [
				"bzz-raw://26e50e3f7b6482fb6f598f2e006994a74aa492687daa4b3eee7fd4fb5398ce7f",
				"dweb:/ipfs/QmZudqoPSkA4USLMFsBBmt19dDPZFS8aaAmL5R7pECXu6t"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/token/ERC20/IERC20.sol": {
			"keccak256": "0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76",
			"license": "MIT",
			"urls": [
				"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b",
				"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/token/ERC20/SafeERC20.sol": {
			"keccak256": "0xc77dd6233a82c7c6e3dc49da8f3456baa00ecd3ea4dfa9222002a9aebf155dcd",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e5f78a5b3e707177aa47371e008a54b83dbd28a52055d1746534502b010c21b",
				"dweb:/ipfs/Qmeqfky5DvkMZZY3RtP6kYhFD5bZrPAMVPbqkwWhoUjZ3u"
			]
		},
		"localhost/contracts/dependencies/openzeppelin/utils/Address.sol": {
			"keccak256": "0x799dadcc9be20dc638f07336056f790f144b3f647b9f3c89c52af37c1be4794d",
			"license": "MIT",
			"urls": [
				"bzz-raw://c040ca0e11f4e9441f2307e3e70fac72b96c2394533c07eda42c40db26746e97",
				"dweb:/ipfs/QmYGoQR56HmoBEpJo5bW7gWUXiejbxvBpeCt8dYsP79XWb"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/configuration/InstrumentConfiguration.sol": {
			"keccak256": "0x00d10b74e73a4c8fabbb1c37b59cbf7e86fff8f5063cd99b4093fd3982dc61b6",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://b129c140d5e8fbaad87551d7ff3b03b62057cb990176a4a24dce812477146632",
				"dweb:/ipfs/QmXZsEZLMB3D21ExmepmZRhuz3QQBsChtkBRxZY2a3TAHh"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/configuration/UserConfiguration.sol": {
			"keccak256": "0x5349f6f536a3df1403e5e8e1e040e2d744554c1fde77e5880f9946cf24ae9e20",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://1e44776a9511c68c989759fc88ceefbab2bc9f7b7d91b4cee408ef70e014d420",
				"dweb:/ipfs/QmaW3h7Yu4LBA5Z4wSFr6W2F99Ha6geca4K9xfmx2pVn25"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/helpers/Errors.sol": {
			"keccak256": "0xdabbb9a872e3c05eb19408f3b6df3f349cc01b74204cbfa84d6dbd914a3fb3da",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://89617f32829cff4df237e2fde5c15d8e3dcbb9b346a8094059034a5a926c4368",
				"dweb:/ipfs/QmdAkfros9Dcz8YKoVvFE3BmhsTTeTAuEk3nowHC6sWG2n"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/helpers/Helpers.sol": {
			"keccak256": "0xc59ba504b88205004126e02e774c36dbbd25aa96feac9bfda44bb1a04aad0e6b",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://dd7050fe880107be383c6f103b45604affbb830977c666130d0857db8179a8eb",
				"dweb:/ipfs/QmYbWqEJGkyhZKCVig7YVDviLVUnu6ZdcLNV5PU2NB4xRe"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/logic/GenericLogic.sol": {
			"keccak256": "0x542124a82122a948085b7452bf417971b3b0a6a0206b368c8bf6bad615c23172",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://da34785e37ddeb9f8ee7ee9b47b3047696f2341524f2557044f82d8622f60048",
				"dweb:/ipfs/QmeWwy3xUSViUeb7pPJTXyxN3xPBVrmZbYvwpvLpTb9DXi"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/logic/InstrumentReserveLogic.sol": {
			"keccak256": "0x8605077ac284a7a31e911e67f568693f64ecb908844de4c7cf524ee6f8628650",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://686b4dc4f4f21809cc1d9668cdbb45bb8b1df33a30803590fdd7a308ff35f6e0",
				"dweb:/ipfs/QmcKJcgPUNv96SScthGAv4BBqEGT4W4Z4qEVGWbZ9dDRVh"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/logic/ValidationLogic.sol": {
			"keccak256": "0xfbe61079869506f2b9caff441a7575da9ca81ab1dea3bb7d8fb45ff65be13f51",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://234ac981e71821856279843f8769df501142ee387f1d5957976565c84c750892",
				"dweb:/ipfs/QmQW14adCWkCLLHaCJ71rgpDPZ9XknN17Ude48p1wtYLXk"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/math/MathUtils.sol": {
			"keccak256": "0x04b6ce24410ae1a16622d64d402911388117c0f1d3e29880545811bfdb4522a2",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://b69134b1e206a6afd8aac2de046836cdc79ce5df31d019abb95f683790c5cc86",
				"dweb:/ipfs/QmWroEDZJbeBehKfJmwjMUUv2JZ8ju2zPHAXpJH48k5Pqe"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/math/PercentageMath.sol": {
			"keccak256": "0xec12b86f57c1f4d5b8ea9b3b3468e1b36eb9a0c24ad08954fd6eb0d0141c2d5e",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://7fefa69c5d59102e283fc513ec62eabf051863a3a328db89988d727edff27e65",
				"dweb:/ipfs/QmUYSN5kjc69s94bnEM1iwE9Akf9HL4FEFKQxArrA7AH7K"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/math/WadRayMath.sol": {
			"keccak256": "0x504b929ff88e2fb5b300561d6e7a028c0761213537c6fc78fbcff1eca4e0f7ed",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://fabb2f931112a03593460ae730308803b8c3ced8c174a0a4791fb5c8b5e2fbe9",
				"dweb:/ipfs/QmXApJYKEdDu7CFcfKpn2Ap9wAraxu62ZvfnDfDm3ejfHN"
			]
		},
		"localhost/contracts/lendingProtocol/libraries/types/DataTypes.sol": {
			"keccak256": "0x49156a840c4dcecea3da7e5949445ba724f374a54df7d2f60e33391f50b99581",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://37b3f5d93949cece243196e40eb06734ccea9e4d3fe4e95bb883d1c4077ba614",
				"dweb:/ipfs/QmQSkAcgL3iPCdumSRRbq2qmhNQfiTwG9MiexSTcX7PaR2"
			]
		},
		"localhost/interfaces/IPriceOracleGetter.sol": {
			"keccak256": "0x1dd84e83596065528e36d1acae128b8f32d03de3c2863f307e66e247b3548cca",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://261231be7a90aaaacb0c16bee5ddb52c42fd1467502e6a9114dc070eb5871b3c",
				"dweb:/ipfs/QmSWGjXonfFRnCKbKRwgkhwf4ReoTEUrdo54ZCvX1bG7e4"
			]
		},
		"localhost/interfaces/lendingProtocol/IFeeProvider.sol": {
			"keccak256": "0xe7e505a2d0f39e9a8c39dabb0188d4291a9184db3916d7227a68e9d5e95d53fc",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://8543e3012eddfdd8c7f58a0fcafdb21ffc6ae516843744c7d125da00b1238a29",
				"dweb:/ipfs/QmRTVHTjYKJ9qDJkWX59phnZDVLU1dBBJBX5V9LrwXTW9q"
			]
		},
		"localhost/interfaces/lendingProtocol/IIToken.sol": {
			"keccak256": "0x445144ca336ca836500bfc787a9ce410ce5d5150fdc991aaf67ea48a99f3c378",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://64c32f12590af4ea24b4a4060deb24eff45a8c4923ce2d9ace985c1e96fd3739",
				"dweb:/ipfs/QmYjQXxbydPLyDyYLUoYUfgBTaRi46NjGX2kpiP5GK6Kjj"
			]
		},
		"localhost/interfaces/lendingProtocol/IInstrumentInterestRateStrategy.sol": {
			"keccak256": "0x58553f2eb968f31c8febd913648f241dd95c8b0a6b0e028478a85adccd69400f",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://0bc04dc8ace55224ec3e9f40dae1390e6beb40dfb6ba86e3237359cba672042c",
				"dweb:/ipfs/QmYY44fSgedCn5d9CQdRnuPSUvanDeGZKgq1DwHjnYzVYB"
			]
		},
		"localhost/interfaces/lendingProtocol/IScaledBalanceToken.sol": {
			"keccak256": "0x1594eeedc9845c21b6b2daf0091f3ebaf46f5c9c898d0048f6b07c5c89a45b8e",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://32ae84ad3e20ab2827ab24ced184f48e9c42678072a6946131d953e52fc63922",
				"dweb:/ipfs/QmZtu9jJWkgoT3ct563RGSFTYwKdsM8cj5NMuq911cbzU1"
			]
		},
		"localhost/interfaces/lendingProtocol/IStableDebtToken.sol": {
			"keccak256": "0xb24827e55cd852a308849c2c06719872919afe94f4b646106cd0a3086e3c21ed",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://b5b0e333546f41d3604b5a315f6209597b70b720e7110e36041f48cf8dee7dda",
				"dweb:/ipfs/QmWnxzzb9oABEZkAeMgEuRG8nEXMA7RcgJYdhyXLjMQziw"
			]
		},
		"localhost/interfaces/lendingProtocol/IVariableDebtToken.sol": {
			"keccak256": "0x4a3040a6a6f9fcab3a3ce17edf8e13b369347badce6c1d03904f088242d0466a",
			"license": "agpl-3.0",
			"urls": [
				"bzz-raw://a27c914b8bb710937b84aee352ba74c5aaa55ffc5737f13cc0d02c016126028d",
				"dweb:/ipfs/QmYLMByCo7AAjNPaNUV5rXegDvyQCTHV7Uw6BVsSUpdqET"
			]
		}
	},
	"version": 1
}